package controller;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import dao.InquireDao;
import dao.MyInformationDao;
import model.Inquire;
import model.LoginUser;
import model.Reservation;
import model.UserInfo;

@Controller
public class MypageController {

    @Autowired
    private MyInformationDao myinformationDao;
    @Autowired
    private InquireDao inquireDao;
    
    @RequestMapping(value="/mypage/cancelReserv.html")
    public ModelAndView cancelReserv(String reservation_id) {
    	ModelAndView mav = new ModelAndView("main");
    	
    	//예약의 모든 문의 가져오기
    	List<Inquire> inqList = this.inquireDao.getInq(reservation_id);
    	for(Inquire i : inqList) {
    		int inqId = i.getInquire_id();
    		this.inquireDao.deleteInquire(inqId); //db에서 예약과 관련된 모든 문의 삭제
    	}
    	
    	this.myinformationDao.deleteReserv(reservation_id); //db에서 예약정보 삭제
    	return new ModelAndView("redirect:/mypage/accList.html");
    }

    @RequestMapping(value="/mypage/accList.html") //나의 예약 리스트
    public ModelAndView accList(HttpSession session) {
    	ModelAndView mav = new ModelAndView("main");
    	LoginUser loginUser = (LoginUser) session.getAttribute("loginUser");
    	
		// 로그인 여부 확인
		if (loginUser == null) {
			mav.addObject("BODY", "login.jsp");
			return mav;
		}
    	
    	List<Reservation> reservList = this.myinformationDao.getReservList(loginUser.getId());
    	for(Reservation item : reservList) {
    		// Date -> LocalDate 변환 (시간 정보 제거)
	    	LocalDate checkInDate = item.getCheck_in_date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
	    	LocalDate checkOutDate = item.getCheck_out_date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
	    	// 일수 차이 계산
	    	long nights = ChronoUnit.DAYS.between(checkInDate, checkOutDate);
	    	item.setNights(nights);
    	}
    	
    	// 오늘 날짜 추가
        mav.addObject("today", new java.sql.Date(System.currentTimeMillis()));
    	mav.addObject("reservList",reservList);
    	mav.addObject("BODY","mypageAccList.jsp");
    	return mav;
    }

    // 마이페이지 메인 (회원 정보 조회)
    @RequestMapping(value="/mypage/mypageMain.html")
    public ModelAndView mypageMain(HttpSession session) {
        ModelAndView mav = new ModelAndView("main");
        
        LoginUser loginUser = (LoginUser) session.getAttribute("loginUser");
        if (loginUser == null) {
            mav.addObject("BODY", "login.jsp");
            return mav;
        }

        UserInfo user = this.myinformationDao.getUser(loginUser.getId());
        mav.addObject("BODY", "mypage.jsp");
        mav.addObject("userInfo", user); // ✅ user 객체 추가
        return mav;
    }
    

    // ✅ 회원 정보 수정 (POST /mypage/update.html)
    @RequestMapping(value="/mypage/update.html")
    public ModelAndView modify(@Valid UserInfo userInfo, BindingResult br) {
        ModelAndView mav = new ModelAndView("main");

        if (br.hasErrors()) {
            mav.addObject("BODY", "mypage.jsp");
            mav.getModel().putAll(br.getModel());
            return mav;
        }

        this.myinformationDao.updateMyInfomation(userInfo);
        UserInfo updatedUser = this.myinformationDao.getUser(userInfo.getUser_id());

        mav.addObject("BODY", "mypageUpdateResult.jsp");
        mav.addObject("userInfo", updatedUser); // ✅ user 객체를 명확히 전달
        return mav;
    }
    
    
	
    // 마이페이지 기본 화면 (기본 index.html 대신 사용 가능)
    @RequestMapping(value="/mypage/index.html")
    public ModelAndView index() {
        ModelAndView mav = new ModelAndView("main");
        mav.addObject("BODY", "mypage.jsp");
        return mav;
    }
}