package controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import dao.AdminDao;
import model.UserInfo;

@Controller
public class AdminController {
    
    @Autowired
    private AdminDao adminDao;
    
    // ✅ 사용자 관리 페이지 이동
    @RequestMapping("/admin/adminUserManagement.html")
    public ModelAndView userManagement() {
        ModelAndView mav = new ModelAndView("main"); 
        mav.addObject("BODY", "adminUserManagement.jsp"); // BODY에 adminUserManagement.jsp 설정
        return mav;
    }

    // ✅ 사용자 조회 페이지 (페이지 이동 및 조회 결과 처리)
    @RequestMapping("/admin/viewUserInfo.html")
    public ModelAndView viewUserInfo(@RequestParam(value = "user_id", required = false) String user_id) {
        ModelAndView mav = new ModelAndView("main");
        mav.addObject("BODY", "adminViewUserInfo.jsp");

        if (user_id != null && !user_id.trim().isEmpty()) {
            UserInfo userInfo = adminDao.getUserInfoById(user_id.trim()); // DB 조회
            
            if (userInfo != null) {
                mav.addObject("userInfo", userInfo); // 조회된 사용자 정보 추가
            } else {
                mav.addObject("error", "해당 아이디의 사용자가 없습니다.");
            }
        } else {
            mav.addObject("error", "사용자 아이디를 입력하세요.");
        }

        return mav;
    }
    
 // ✅ 승인 대기 숙소 목록 (app_status = 0인 숙소만 조회)
    @RequestMapping("/admin/adminPendingAcc.html")
    public ModelAndView pendingAccommodations() {
        ModelAndView mav = new ModelAndView("main");
        mav.addObject("BODY", "adminPendingAcc.jsp");

        List<Map<String, Object>> accommodations = adminDao.getPendingAccommodations();

        // 사용자 정보 추가 로직
        List<Map<String, Object>> accommodationsWithUserInfo = new ArrayList<>();
        for (Map<String, Object> acc : accommodations) {
            Map<String, Object> accData = new HashMap<>();
            accData.put("accname", acc.get("accname"));
            accData.put("location", acc.get("location"));
            accData.put("app_status", acc.get("app_status"));

            // 추가된 데이터 매핑
            accData.put("username", acc.get("username") != null ? acc.get("username") : "N/A");
            accData.put("phone", acc.get("phone") != null ? acc.get("phone") : "N/A");

            accommodationsWithUserInfo.add(accData);
        }

        mav.addObject("pendingAccommodations", accommodationsWithUserInfo);

        return mav;
    }

    // ✅ 숙소 상세 정보 조회
    @RequestMapping("/admin/viewAccommodationDetail.html")
    public ModelAndView viewAccommodationDetail(@RequestParam("accommodationId") String accommodationId) {
        ModelAndView mav = new ModelAndView("main");  
        mav.addObject("BODY", "approveAccommodation.jsp");  // 🔄 JSP 경로 수정

     // 숙소 정보 조회
        Map<String, Object> accommodation = adminDao.getAccommodationById(accommodationId);
        List<Map<String, Object>> roomList = adminDao.getRoomsByAccommodationId(accommodationId);

        // JSP에 맞게 데이터 바인딩
        mav.addObject("accommodation", accommodation);
        mav.addObject("rooms", roomList);

        return mav;
    }

    // ✅ 숙소 승인 처리
    @RequestMapping("/admin/approveAccommodation.html")
    public String approveAccommodation(
            @RequestParam("accommodationId") String accommodationId,
            RedirectAttributes redirectAttributes) {

        try {
            int result = adminDao.updateAccommodationStatus(accommodationId, 1); // 승인 처리
            if (result > 0) {
                redirectAttributes.addFlashAttribute("message", "숙소 승인이 완료되었습니다.");
            } else {
                redirectAttributes.addFlashAttribute("error", "승인에 실패했습니다. 다시 시도해주세요.");
            }
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("error", "오류가 발생했습니다: " + e.getMessage());
        }

        return "redirect:/admin/adminPendingAcc.html";
    }
}