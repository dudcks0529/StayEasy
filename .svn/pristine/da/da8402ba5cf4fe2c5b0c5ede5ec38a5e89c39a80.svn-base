package controller;

import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import dao.AccDao;
import dao.MyInformationDao;
import model.Accommodation;
import model.LoginUser;
import model.Room;
import model.RoomId;
import model.User;
import model.UserInfo;

@Controller
public class AccController {
	
    @Autowired
    private MyInformationDao myInformationDao;
    @Autowired
    private AccDao accDao;

    // 숙소 신청 페이지
    @RequestMapping(value="/acc/putAcc.html", method=RequestMethod.GET)
    public ModelAndView putAccmain(HttpSession session) {
        ModelAndView mav = new ModelAndView("main");

        // 로그인 확인
        LoginUser loginUser = (LoginUser) session.getAttribute("loginUser");
        if (loginUser == null) {
            mav.addObject("BODY", "login.jsp");
            return mav;
        }

        // 유저 정보 가져오기
        UserInfo userInfo = accDao.getUserInfoById(loginUser.getId());

        // 숙소 객체 생성 및 초기화
        Accommodation accommodation = new Accommodation();
        accommodation.setCategory(new model.Category());
        
        User user = new User();
        user.setUser_id(userInfo.getUser_id()); 
        user.setUsername(userInfo.getUsername()); 
        user.setPhone(userInfo.getPhone()); 
        accommodation.setUser(user);

        // 모델 추가
        mav.addObject("BODY", "putAccommodation.jsp");
        mav.addObject("accommodation", accommodation);
        return mav;
    }
    
    
 // 숙소 신청 데이터 저장 (POST 요청)
    @RequestMapping(value="/acc/submitAcc.html", method=RequestMethod.POST)
    public ModelAndView submitAcc(
    		@ModelAttribute("accommodation") Accommodation accommodation,
            @RequestParam("main_photo") MultipartFile mainPhoto, // 숙소 대표 사진
            @RequestParam("room1_photo") MultipartFile room1Photo,
            @RequestParam("room2_photo") MultipartFile room2Photo,
            @RequestParam("room3_photo") MultipartFile room3Photo,
            @RequestParam("room1_name") String room1Name,
            @RequestParam("room1_price_per_night") Integer room1Price,
            @RequestParam("room1_capacity") Integer room1Capacity,
            @RequestParam("room2_name") String room2Name,
            @RequestParam("room2_price_per_night") Integer room2Price,
            @RequestParam("room2_capacity") Integer room2Capacity,
            @RequestParam("room3_name") String room3Name,
            @RequestParam("room3_price_per_night") Integer room3Price,
            @RequestParam("room3_capacity") Integer room3Capacity,
            HttpSession session
    ) {
        ModelAndView mav = new ModelAndView("main");

        // 로그인 확인
        LoginUser loginUser = (LoginUser) session.getAttribute("loginUser");
        if (loginUser == null) {
            mav.addObject("BODY", "login.jsp");
            return mav;
        }

        // 유저 정보 가져오기
        UserInfo userInfo = myInformationDao.getUser(loginUser.getId());
        if (userInfo == null) {
            mav.addObject("BODY", "login.jsp");
            return mav;
        }

        // 숙소 ID 설정
        String newAccId = accDao.getNextAccommodationId();
        accommodation.setAccommodation_id(newAccId);
        
        // 유저 설정
        User user = new User();
        user.setUser_id(userInfo.getUser_id());
        accommodation.setUser(user); // user 추가

        // 최저가 설정
        int minPrice = Math.min(
            room1Price != null ? room1Price : 50000,
            Math.min(room2Price != null ? room2Price : 50000,
                     room3Price != null ? room3Price : 50000)
        );
        accommodation.setPrice_per_night(minPrice);

        // 숙소 대표 사진 저장
        if (!mainPhoto.isEmpty()) {
            accommodation.setAcc_image(mainPhoto.getOriginalFilename()); // 파일명 저장
        }

        // 방 정보 리스트 생성
        List<Room> rooms = new ArrayList<>();

        Room room1 = new Room();
        room1.setAccommodation(accommodation);
        room1.setName(room1Name != null ? room1Name : "기본 방1");
        room1.setPrice_per_night(room1Price != null ? room1Price : 50000);
        room1.setCapacity(room1Capacity != null ? room1Capacity : 2);
        room1.setRoom_image(!room1Photo.isEmpty() ? room1Photo.getOriginalFilename() : "/imgs/방사진1.png");
        room1.setId(new RoomId(accDao.getNextRoomId(), newAccId));
        rooms.add(room1);

        Room room2 = new Room();
        room2.setAccommodation(accommodation);
        room2.setName(room2Name != null ? room2Name : "기본 방2");
        room2.setPrice_per_night(room2Price != null ? room2Price : 50000);
        room2.setCapacity(room2Capacity != null ? room2Capacity : 2);
        room2.setRoom_image(!room2Photo.isEmpty() ? room2Photo.getOriginalFilename() : "/imgs/방사진2.png");
        room2.setId(new RoomId(accDao.getNextRoomId(), newAccId));
        rooms.add(room2);

        Room room3 = new Room();
        room3.setAccommodation(accommodation);
        room3.setName(room3Name != null ? room3Name : "기본 방3");
        room3.setPrice_per_night(room3Price != null ? room3Price : 50000);
        room3.setCapacity(room3Capacity != null ? room3Capacity : 2);
        room3.setRoom_image(!room3Photo.isEmpty() ? room3Photo.getOriginalFilename() : "/imgs/방사진3.png");
        room3.setId(new RoomId(accDao.getNextRoomId(), newAccId));
        rooms.add(room3);

        // 숙소에 방 리스트 추가
        accommodation.setRooms(rooms);

        // DB에 저장
        accDao.insertAccommodation(accommodation);
        for (Room room : rooms) {
            accDao.insertRoom(room, newAccId);
        }

        // 숙소 신청 완료 페이지로 이동
        mav.addObject("BODY", "putAccommodationUpdate.jsp");
        return mav;
    }
    
    @RequestMapping("/acc/myAccommodations.html")public ModelAndView myAccommodations(HttpSession session) {
        ModelAndView mav = new ModelAndView("main");

        LoginUser loginUser = (LoginUser) session.getAttribute("loginUser");
        if (loginUser == null) {
            mav.addObject("BODY", "login.jsp");
            return mav;
        }

        // 숙소 목록 조회
        List<Accommodation> accommodationList = accDao.getAccommodationsByUser(loginUser.getId());

        // 🔥 데이터 구조를 Map 형태로 변환
        List<Map<String, Object>> accommodations = new ArrayList<>();
        for (Accommodation acc : accommodationList) {
            Map<String, Object> map = new HashMap<>();
            map.put("accommodation_id", acc.getAccommodation_id());
            map.put("accname", acc.getAccname());
            map.put("a_date", acc.getA_date() != null 
                             ? acc.getA_date().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate()
                             .format(DateTimeFormatter.ofPattern("yyyy년 MM월 dd일"))
                             : "날짜 없음");  
            map.put("app_status", acc.getApp_status());
            accommodations.add(map);
        }

        mav.addObject("accommodations", accommodations);
        mav.addObject("BODY", "myAccommodations.jsp");

        return mav;
    }
}